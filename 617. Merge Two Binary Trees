# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None


class Solution(object):
    def mergeTrees(self, t1, t2):
        """
        :type t1: TreeNode
        :type t2: TreeNode
        :rtype: TreeNode
        """
        if t1 and t2:
            ans = TreeNode(t1.val + t2.val)
            ans.left = self.mergeTrees(t1.left, t2.left)
            ans.right = self.mergeTrees(t1.right, t2.right)
            return ans
        else:
            return t1 or t2
            
 # Explanation : 
 # We need to return a proper tree. so we first check if t1 and t2 exist. then we use
 # TreeNode() to specify the usage of node with a merged value. After that simple use
 # node.left or node.right and return.
 
 # In the case where both t1 and t2 aren't present, we use t1 or t2. Simple!
