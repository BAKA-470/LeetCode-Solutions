class Solution(object):
    
    def SieveOfEratosthenes(self, n):
        prime = [True for i in range(n+1)]
        p = 2
        while (p * p <= n):

            if (prime[p] == True):

                for i in range(p * 2, n+1, p):
                    prime[i] = False
            p += 1

        ans = []
        # Print all prime numbers
        for p in range(2, n):
            if prime[p]:
                ans.append(p)
        return ans

    
    
    def countPrimeSetBits(self, L, R):
        """
        :type L: int
        :type R: int
        :rtype: int
        """
        sum = 0
        primes = self.SieveOfEratosthenes(100)
        for i in range(L,R+1):
            if bin(i).count('1') in primes:
                sum += 1
        return sum
            
